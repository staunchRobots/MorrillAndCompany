<?php

/**
 * BaseFeature
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $property_id
 * @property integer $detail_id
 * @property varchar $name
 * @property Property $Property
 * @property Detail $Detail
 * 
 * @method integer  getPropertyId()  Returns the current record's "property_id" value
 * @method integer  getDetailId()    Returns the current record's "detail_id" value
 * @method varchar  getName()        Returns the current record's "name" value
 * @method Property getProperty()    Returns the current record's "Property" value
 * @method Detail   getDetail()      Returns the current record's "Detail" value
 * @method Feature  setPropertyId()  Sets the current record's "property_id" value
 * @method Feature  setDetailId()    Sets the current record's "detail_id" value
 * @method Feature  setName()        Sets the current record's "name" value
 * @method Feature  setProperty()    Sets the current record's "Property" value
 * @method Feature  setDetail()      Sets the current record's "Detail" value
 * 
 * @package    
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFeature extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('feature');
        $this->hasColumn('property_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('detail_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Property', array(
             'local' => 'property_id',
             'foreign' => 'id'));

        $this->hasOne('Detail', array(
             'local' => 'detail_id',
             'foreign' => 'id'));
    }
}