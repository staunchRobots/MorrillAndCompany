<?php

/**
 * BaseProperty
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property int $user_id
 * @property text $description
 * @property varchar $street
 * @property varchar $city
 * @property varchar $postal_code
 * @property varchar $state
 * @property varchar $tagline
 * @property varchar $price
 * @property integer $bedrooms
 * @property integer $bathrooms
 * @property varchar $type
 * @property varchar $status
 * @property integer $full_bathrooms
 * @property integer $half_bathrooms
 * @property integer $garage_spaces
 * @property integer $lots_size
 * @property integer $square_footage
 * @property boolean $have_see_more
 * @property sfGuardUser $User
 * @property Doctrine_Collection $Details
 * @property Doctrine_Collection $Photos
 * @property Doctrine_Collection $Features
 * 
 * @method int                 getUserId()         Returns the current record's "user_id" value
 * @method text                getDescription()    Returns the current record's "description" value
 * @method varchar             getStreet()         Returns the current record's "street" value
 * @method varchar             getCity()           Returns the current record's "city" value
 * @method varchar             getPostalCode()     Returns the current record's "postal_code" value
 * @method varchar             getState()          Returns the current record's "state" value
 * @method varchar             getTagline()        Returns the current record's "tagline" value
 * @method varchar             getPrice()          Returns the current record's "price" value
 * @method integer             getBedrooms()       Returns the current record's "bedrooms" value
 * @method integer             getBathrooms()      Returns the current record's "bathrooms" value
 * @method varchar             getType()           Returns the current record's "type" value
 * @method varchar             getStatus()         Returns the current record's "status" value
 * @method integer             getFullBathrooms()  Returns the current record's "full_bathrooms" value
 * @method integer             getHalfBathrooms()  Returns the current record's "half_bathrooms" value
 * @method integer             getGarageSpaces()   Returns the current record's "garage_spaces" value
 * @method integer             getLotsSize()       Returns the current record's "lots_size" value
 * @method integer             getSquareFootage()  Returns the current record's "square_footage" value
 * @method boolean             getHaveSeeMore()    Returns the current record's "have_see_more" value
 * @method sfGuardUser         getUser()           Returns the current record's "User" value
 * @method Doctrine_Collection getDetails()        Returns the current record's "Details" collection
 * @method Doctrine_Collection getPhotos()         Returns the current record's "Photos" collection
 * @method Doctrine_Collection getFeatures()       Returns the current record's "Features" collection
 * @method Property            setUserId()         Sets the current record's "user_id" value
 * @method Property            setDescription()    Sets the current record's "description" value
 * @method Property            setStreet()         Sets the current record's "street" value
 * @method Property            setCity()           Sets the current record's "city" value
 * @method Property            setPostalCode()     Sets the current record's "postal_code" value
 * @method Property            setState()          Sets the current record's "state" value
 * @method Property            setTagline()        Sets the current record's "tagline" value
 * @method Property            setPrice()          Sets the current record's "price" value
 * @method Property            setBedrooms()       Sets the current record's "bedrooms" value
 * @method Property            setBathrooms()      Sets the current record's "bathrooms" value
 * @method Property            setType()           Sets the current record's "type" value
 * @method Property            setStatus()         Sets the current record's "status" value
 * @method Property            setFullBathrooms()  Sets the current record's "full_bathrooms" value
 * @method Property            setHalfBathrooms()  Sets the current record's "half_bathrooms" value
 * @method Property            setGarageSpaces()   Sets the current record's "garage_spaces" value
 * @method Property            setLotsSize()       Sets the current record's "lots_size" value
 * @method Property            setSquareFootage()  Sets the current record's "square_footage" value
 * @method Property            setHaveSeeMore()    Sets the current record's "have_see_more" value
 * @method Property            setUser()           Sets the current record's "User" value
 * @method Property            setDetails()        Sets the current record's "Details" collection
 * @method Property            setPhotos()         Sets the current record's "Photos" collection
 * @method Property            setFeatures()       Sets the current record's "Features" collection
 * 
 * @package    
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProperty extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('property');
        $this->hasColumn('user_id', 'int', null, array(
             'type' => 'int',
             'notnull' => true,
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('street', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('city', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('postal_code', 'varchar', 6, array(
             'type' => 'varchar',
             'length' => 6,
             ));
        $this->hasColumn('state', 'varchar', 2, array(
             'type' => 'varchar',
             'length' => 2,
             ));
        $this->hasColumn('tagline', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('price', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('bedrooms', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('bathrooms', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('type', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('status', 'varchar', 255, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('full_bathrooms', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('half_bathrooms', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('garage_spaces', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('lots_size', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('square_footage', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('have_see_more', 'boolean', null, array(
             'type' => 'boolean',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('Detail as Details', array(
             'local' => 'id',
             'foreign' => 'property_id'));

        $this->hasMany('Photo as Photos', array(
             'local' => 'id',
             'foreign' => 'property_id'));

        $this->hasMany('Feature as Features', array(
             'local' => 'id',
             'foreign' => 'property_id'));
    }
}