CREATE TABLE detail (id BIGINT AUTO_INCREMENT, property_id BIGINT NOT NULL, name VARCHAR(255), description VARCHAR(255), has_photos TINYINT(1), has_features TINYINT(1), INDEX property_id_idx (property_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE feature (id BIGINT AUTO_INCREMENT, property_id BIGINT NOT NULL, detail_id BIGINT NOT NULL, name VARCHAR(255), INDEX property_id_idx (property_id), INDEX detail_id_idx (detail_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE photo (id BIGINT AUTO_INCREMENT, detail_id BIGINT NOT NULL, property_id BIGINT NOT NULL, is_main_photo TINYINT(1), views BIGINT DEFAULT 0, photo VARCHAR(45), position BIGINT, UNIQUE INDEX sortable_idx (position), INDEX property_id_idx (property_id), INDEX detail_id_idx (detail_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE property (id BIGINT AUTO_INCREMENT, user_id INT NOT NULL, street VARCHAR(255), city VARCHAR(255), postal_code VARCHAR(6), state VARCHAR(2), tagline VARCHAR(255), price VARCHAR(255), bedrooms BIGINT, bathrooms BIGINT, type VARCHAR(255), status VARCHAR(255), full_bathrooms BIGINT, half_bathrooms BIGINT, garage_spaces BIGINT, lots_size BIGINT, square_footage BIGINT, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id INT AUTO_INCREMENT, user_id INT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id, ip_address)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id INT AUTO_INCREMENT, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id INT, group_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE detail ADD CONSTRAINT detail_property_id_property_id FOREIGN KEY (property_id) REFERENCES property(id);
ALTER TABLE feature ADD CONSTRAINT feature_property_id_property_id FOREIGN KEY (property_id) REFERENCES property(id);
ALTER TABLE feature ADD CONSTRAINT feature_detail_id_detail_id FOREIGN KEY (detail_id) REFERENCES detail(id);
ALTER TABLE photo ADD CONSTRAINT photo_property_id_property_id FOREIGN KEY (property_id) REFERENCES property(id);
ALTER TABLE photo ADD CONSTRAINT photo_detail_id_detail_id FOREIGN KEY (detail_id) REFERENCES detail(id);
ALTER TABLE property ADD CONSTRAINT property_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
